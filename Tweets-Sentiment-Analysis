{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":16295,"databundleVersionId":1099992,"sourceType":"competition"}],"dockerImageVersionId":30702,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Import Dependencies","metadata":{}},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-25T06:01:26.323923Z","iopub.execute_input":"2024-04-25T06:01:26.324917Z","iopub.status.idle":"2024-04-25T06:01:26.329927Z","shell.execute_reply.started":"2024-04-25T06:01:26.324876Z","shell.execute_reply":"2024-04-25T06:01:26.328725Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":"# Data Acquisition \n- load taining and testing data from csv file\n- print data shape\n","metadata":{}},{"cell_type":"code","source":"train_df = pd.read_csv('/kaggle/input/tweet-sentiment-extraction/train.csv')\ntest_df = pd.read_csv('/kaggle/input/tweet-sentiment-extraction/test.csv')","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-04-25T06:32:57.416718Z","iopub.execute_input":"2024-04-25T06:32:57.417771Z","iopub.status.idle":"2024-04-25T06:32:57.530786Z","shell.execute_reply.started":"2024-04-25T06:32:57.417725Z","shell.execute_reply":"2024-04-25T06:32:57.529504Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"train_df.sample(6)","metadata":{"execution":{"iopub.status.busy":"2024-04-25T06:38:31.199571Z","iopub.execute_input":"2024-04-25T06:38:31.199980Z","iopub.status.idle":"2024-04-25T06:38:31.217866Z","shell.execute_reply.started":"2024-04-25T06:38:31.199952Z","shell.execute_reply":"2024-04-25T06:38:31.216760Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"           textID                                               text  \\\n6765   868c16ad83  I need to get in a good, hard workout today af...   \n2692   6cf831995f         awwww bless her  she needs another chance.   \n25890  64a62607f1   Ah  Not doing cbeebies epg by any chance are ...   \n10136  52618f5c42                                              I see   \n9950   f2a177bbf8  Im going to go to bed again, ear (both) infect...   \n27021  e01e3b75a8    typical Google Docs is down  oh well open Pages   \n\n                                           selected_text sentiment  \n6765                                             No good  negative  \n2692                                     awwww bless her  positive  \n25890  Ah  Not doing cbeebies epg by any chance are y...   neutral  \n10136                                              I see   neutral  \n9950                                            yyyyuck!  negative  \n27021    typical Google Docs is down  oh well open Pages   neutral  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>textID</th>\n      <th>text</th>\n      <th>selected_text</th>\n      <th>sentiment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>6765</th>\n      <td>868c16ad83</td>\n      <td>I need to get in a good, hard workout today af...</td>\n      <td>No good</td>\n      <td>negative</td>\n    </tr>\n    <tr>\n      <th>2692</th>\n      <td>6cf831995f</td>\n      <td>awwww bless her  she needs another chance.</td>\n      <td>awwww bless her</td>\n      <td>positive</td>\n    </tr>\n    <tr>\n      <th>25890</th>\n      <td>64a62607f1</td>\n      <td>Ah  Not doing cbeebies epg by any chance are ...</td>\n      <td>Ah  Not doing cbeebies epg by any chance are y...</td>\n      <td>neutral</td>\n    </tr>\n    <tr>\n      <th>10136</th>\n      <td>52618f5c42</td>\n      <td>I see</td>\n      <td>I see</td>\n      <td>neutral</td>\n    </tr>\n    <tr>\n      <th>9950</th>\n      <td>f2a177bbf8</td>\n      <td>Im going to go to bed again, ear (both) infect...</td>\n      <td>yyyyuck!</td>\n      <td>negative</td>\n    </tr>\n    <tr>\n      <th>27021</th>\n      <td>e01e3b75a8</td>\n      <td>typical Google Docs is down  oh well open Pages</td>\n      <td>typical Google Docs is down  oh well open Pages</td>\n      <td>neutral</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"print(f'Training data shape: {train_df.shape}, Test data shape: {test_df.shape}')","metadata":{"execution":{"iopub.status.busy":"2024-04-25T06:35:20.977449Z","iopub.execute_input":"2024-04-25T06:35:20.977868Z","iopub.status.idle":"2024-04-25T06:35:20.983729Z","shell.execute_reply.started":"2024-04-25T06:35:20.977838Z","shell.execute_reply":"2024-04-25T06:35:20.982578Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"Training data shape: (27481, 4), Test data shape: (3534, 3)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Data Cleaning \n- NaN values \n- Duplications","metadata":{}},{"cell_type":"markdown","source":"## Nan Values","metadata":{}},{"cell_type":"code","source":"train_df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-25T06:36:53.197243Z","iopub.execute_input":"2024-04-25T06:36:53.197695Z","iopub.status.idle":"2024-04-25T06:36:53.221171Z","shell.execute_reply.started":"2024-04-25T06:36:53.197639Z","shell.execute_reply":"2024-04-25T06:36:53.219957Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"textID           0\ntext             1\nselected_text    1\nsentiment        0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# show the nan row \ntrain_df[train_df.isnull().any(axis=1)]","metadata":{"execution":{"iopub.status.busy":"2024-04-25T06:42:22.210458Z","iopub.execute_input":"2024-04-25T06:42:22.210864Z","iopub.status.idle":"2024-04-25T06:42:22.237809Z","shell.execute_reply.started":"2024-04-25T06:42:22.210836Z","shell.execute_reply":"2024-04-25T06:42:22.236564Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"         textID text selected_text sentiment\n314  fdb77c3752  NaN           NaN   neutral","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>textID</th>\n      <th>text</th>\n      <th>selected_text</th>\n      <th>sentiment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>314</th>\n      <td>fdb77c3752</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>neutral</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_df.loc[314]","metadata":{"execution":{"iopub.status.busy":"2024-04-25T06:42:56.002294Z","iopub.execute_input":"2024-04-25T06:42:56.002723Z","iopub.status.idle":"2024-04-25T06:42:56.011808Z","shell.execute_reply.started":"2024-04-25T06:42:56.002689Z","shell.execute_reply":"2024-04-25T06:42:56.010304Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"textID           fdb77c3752\ntext                    NaN\nselected_text           NaN\nsentiment           neutral\nName: 314, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"test_df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-25T06:37:47.235841Z","iopub.execute_input":"2024-04-25T06:37:47.236239Z","iopub.status.idle":"2024-04-25T06:37:47.246380Z","shell.execute_reply.started":"2024-04-25T06:37:47.236206Z","shell.execute_reply":"2024-04-25T06:37:47.245282Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"textID       0\ntext         0\nsentiment    0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# as it's one row i will drop it \ntrain_df.dropna(inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-25T06:45:01.781461Z","iopub.execute_input":"2024-04-25T06:45:01.781853Z","iopub.status.idle":"2024-04-25T06:45:01.804681Z","shell.execute_reply.started":"2024-04-25T06:45:01.781825Z","shell.execute_reply":"2024-04-25T06:45:01.803556Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"train_df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-25T06:45:11.596700Z","iopub.execute_input":"2024-04-25T06:45:11.597627Z","iopub.status.idle":"2024-04-25T06:45:11.619757Z","shell.execute_reply.started":"2024-04-25T06:45:11.597590Z","shell.execute_reply":"2024-04-25T06:45:11.618594Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"textID           0\ntext             0\nselected_text    0\nsentiment        0\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"## Duplications","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}